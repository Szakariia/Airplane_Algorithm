{"ast":null,"code":"const RegexExp = value => {\n  var RegexExp = /^(\\[\\[\\d+,\\s?\\d+\\](,\\s?\\[\\d+,\\s?\\d+\\])*\\]|\\[\\d+,\\s?\\d+\\](,\\s?\\[\\d+,\\s?\\d+\\])*)$/;\n  return RegexExp.test(value) ? \"2D array Syntax error\" : \"\";\n};\n_c = RegexExp;\nfunction Inputvalidator(formValues) {\n  console.log(\"validator \", formValues.Seats.value);\n  if (formValues !== null && formValues !== void 0 && formValues.Seats.value) formValues.Seats.error = RegexExp(formValues.Seats.value);\n  return formValues;\n}\n_c2 = Inputvalidator;\nexport default Inputvalidator;\nvar _c, _c2;\n$RefreshReg$(_c, \"RegexExp\");\n$RefreshReg$(_c2, \"Inputvalidator\");","map":{"version":3,"names":["RegexExp","value","test","Inputvalidator","formValues","console","log","Seats","error"],"sources":["/Users/selbizakaria/Desktop/airplan-algo/src/Utils/inputValidator.js"],"sourcesContent":["const RegexExp = (value) => {\n    var RegexExp = /^(\\[\\[\\d+,\\s?\\d+\\](,\\s?\\[\\d+,\\s?\\d+\\])*\\]|\\[\\d+,\\s?\\d+\\](,\\s?\\[\\d+,\\s?\\d+\\])*)$/;\n    return (RegexExp.test(value) ? \"2D array Syntax error\" : \"\")\n}\n\nfunction Inputvalidator(formValues) {\n\n    console.log(\"validator \",formValues.Seats.value)\n    if (formValues?.Seats.value) formValues.Seats.error = RegexExp(formValues.Seats.value)\n    return (formValues)\n}\n\nexport default Inputvalidator;"],"mappings":"AAAA,MAAMA,QAAQ,GAAIC,KAAK,IAAK;EACxB,IAAID,QAAQ,GAAG,iFAAiF;EAChG,OAAQA,QAAQ,CAACE,IAAI,CAACD,KAAK,CAAC,GAAG,uBAAuB,GAAG,EAAE;AAC/D,CAAC;AAAA,KAHKD,QAAQ;AAKd,SAASG,cAAc,CAACC,UAAU,EAAE;EAEhCC,OAAO,CAACC,GAAG,CAAC,YAAY,EAACF,UAAU,CAACG,KAAK,CAACN,KAAK,CAAC;EAChD,IAAIG,UAAU,aAAVA,UAAU,eAAVA,UAAU,CAAEG,KAAK,CAACN,KAAK,EAAEG,UAAU,CAACG,KAAK,CAACC,KAAK,GAAGR,QAAQ,CAACI,UAAU,CAACG,KAAK,CAACN,KAAK,CAAC;EACtF,OAAQG,UAAU;AACtB;AAAC,MALQD,cAAc;AAOvB,eAAeA,cAAc;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}