{"ast":null,"code":"const RegexExp = value => {\n  var RegexExp = /^(\\[\\[\\d+,\\s?\\d+\\](,\\s?\\[\\d+,\\s?\\d+\\])*\\]|\\[\\d+,\\s?\\d+\\](,\\s?\\[\\d+,\\s?\\d+\\])*)$/;\n  return !RegexExp.test(value) ? \"2D array Syntax error\" : \"\";\n};\n_c = RegexExp;\nfunction Inputvalidator(value, name) {\n  if (name === \"Seats\") return RegexExp(value);\n  if (name === \"Passengers\") return RegexExp(value);\n}\n_c2 = Inputvalidator;\nexport default Inputvalidator;\nvar _c, _c2;\n$RefreshReg$(_c, \"RegexExp\");\n$RefreshReg$(_c2, \"Inputvalidator\");","map":{"version":3,"names":["RegexExp","value","test","Inputvalidator","name"],"sources":["/Users/selbizakaria/Desktop/airplan-algo/src/Utils/inputValidator.js"],"sourcesContent":["const RegexExp = (value) => {\n    \n    var RegexExp = /^(\\[\\[\\d+,\\s?\\d+\\](,\\s?\\[\\d+,\\s?\\d+\\])*\\]|\\[\\d+,\\s?\\d+\\](,\\s?\\[\\d+,\\s?\\d+\\])*)$/;\n    return (!RegexExp.test(value) ? \"2D array Syntax error\" : \"\")\n}\n\nfunction Inputvalidator(value, name) {\n    if (name === \"Seats\") return (RegexExp(value))\n    if (name === \"Passengers\") return (RegexExp(value))\n}\n\nexport default Inputvalidator;"],"mappings":"AAAA,MAAMA,QAAQ,GAAIC,KAAK,IAAK;EAExB,IAAID,QAAQ,GAAG,iFAAiF;EAChG,OAAQ,CAACA,QAAQ,CAACE,IAAI,CAACD,KAAK,CAAC,GAAG,uBAAuB,GAAG,EAAE;AAChE,CAAC;AAAA,KAJKD,QAAQ;AAMd,SAASG,cAAc,CAACF,KAAK,EAAEG,IAAI,EAAE;EACjC,IAAIA,IAAI,KAAK,OAAO,EAAE,OAAQJ,QAAQ,CAACC,KAAK,CAAC;EAC7C,IAAIG,IAAI,KAAK,YAAY,EAAE,OAAQJ,QAAQ,CAACC,KAAK,CAAC;AACtD;AAAC,MAHQE,cAAc;AAKvB,eAAeA,cAAc;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}