{"ast":null,"code":"const RegexExp = value => {\n  var RegexExp = /^(\\[\\[\\d+,\\s?\\d+\\](,\\s?\\[\\d+,\\s?\\d+\\])*\\]|\\[\\d+,\\s?\\d+\\](,\\s?\\[\\d+,\\s?\\d+\\])*)$/;\n  return !RegexExp.test(value) ? \"2D array Syntax error\" : \"\";\n};\n_c = RegexExp;\nconst isNumber = value => {\n  if (value > 50 || value < 0) return \"Value must be between 0 - 50\";\n  return !RegexExp.test(value) ? \"2D array Syntax error\" : \"\";\n};\nfunction Inputvalidator(value, name) {\n  if (name === \"Seats\") return RegexExp(value);\n  if (name === \"Passengers\") return isNumber(value);\n}\n_c2 = Inputvalidator;\nexport default Inputvalidator;\nvar _c, _c2;\n$RefreshReg$(_c, \"RegexExp\");\n$RefreshReg$(_c2, \"Inputvalidator\");","map":{"version":3,"names":["RegexExp","value","test","isNumber","Inputvalidator","name"],"sources":["/Users/selbizakaria/Desktop/airplan-algo/src/Utils/inputValidator.js"],"sourcesContent":["const RegexExp = (value) => {\n    \n    var RegexExp = /^(\\[\\[\\d+,\\s?\\d+\\](,\\s?\\[\\d+,\\s?\\d+\\])*\\]|\\[\\d+,\\s?\\d+\\](,\\s?\\[\\d+,\\s?\\d+\\])*)$/;\n    return (!RegexExp.test(value) ? \"2D array Syntax error\" : \"\")\n}\n\nconst isNumber = (value) => {\n    if (value > 50 || value < 0) return (\"Value must be between 0 - 50\")\n    return (!RegexExp.test(value) ? \"2D array Syntax error\" : \"\")\n}\n\nfunction Inputvalidator(value, name) {\n    if (name === \"Seats\") return (RegexExp(value))\n    if (name === \"Passengers\") return (isNumber(value))\n}\n\nexport default Inputvalidator;"],"mappings":"AAAA,MAAMA,QAAQ,GAAIC,KAAK,IAAK;EAExB,IAAID,QAAQ,GAAG,iFAAiF;EAChG,OAAQ,CAACA,QAAQ,CAACE,IAAI,CAACD,KAAK,CAAC,GAAG,uBAAuB,GAAG,EAAE;AAChE,CAAC;AAAA,KAJKD,QAAQ;AAMd,MAAMG,QAAQ,GAAIF,KAAK,IAAK;EACxB,IAAIA,KAAK,GAAG,EAAE,IAAIA,KAAK,GAAG,CAAC,EAAE,OAAQ,8BAA8B;EACnE,OAAQ,CAACD,QAAQ,CAACE,IAAI,CAACD,KAAK,CAAC,GAAG,uBAAuB,GAAG,EAAE;AAChE,CAAC;AAED,SAASG,cAAc,CAACH,KAAK,EAAEI,IAAI,EAAE;EACjC,IAAIA,IAAI,KAAK,OAAO,EAAE,OAAQL,QAAQ,CAACC,KAAK,CAAC;EAC7C,IAAII,IAAI,KAAK,YAAY,EAAE,OAAQF,QAAQ,CAACF,KAAK,CAAC;AACtD;AAAC,MAHQG,cAAc;AAKvB,eAAeA,cAAc;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}