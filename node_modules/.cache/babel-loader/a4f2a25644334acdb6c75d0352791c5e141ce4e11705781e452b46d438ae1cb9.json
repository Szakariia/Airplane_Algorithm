{"ast":null,"code":"// [row, col] [x, y] [2,3]\n\nfunction beZeroArr2D(arr, x, y) {\n  console.log(\" ROW, COL :\", x, y);\n  for (let i = 0; i < y; i++) arr[i] = Array(x).fill(0); //beZero\n  return arr;\n}\nfunction beZeroArr3D(Seats) {\n  let regex = /\\d+/g; // get only numbers\n  let seatsArr = Seats.match(regex);\n  let arr = []; // 3D arr\n  let arr2D = [[]]; // 2D arr\n  console.log(\"Seate :\", seatsArr);\n  let x = 0;\n  let y = 1;\n  for (let i = 0; i < (seatsArr === null || seatsArr === void 0 ? void 0 : seatsArr.length) / 2; i++) {\n    // (Seats / 2) : (int) means how much seats we have \n    x = i ? 0 : x += 2;\n    let y = Number(x) + 1;\n    console.log(\"X , Y, i\", x, y, i);\n    arr.push([beZeroArr2D(arr2D, Number(seatsArr[x]), Number(seatsArr[y]))]);\n    console.log(\"New Arry\", arr);\n  }\n  return arr;\n}\nfunction CreateMap(FormValues) {\n  console.log(\"DATA CREATE MAP:\", FormValues);\n  beZeroArr3D(FormValues.Seats);\n  return \"\";\n}\n_c = CreateMap;\nexport default CreateMap;\nvar _c;\n$RefreshReg$(_c, \"CreateMap\");","map":{"version":3,"names":["beZeroArr2D","arr","x","y","console","log","i","Array","fill","beZeroArr3D","Seats","regex","seatsArr","match","arr2D","length","Number","push","CreateMap","FormValues"],"sources":["/Users/selbizakaria/Desktop/airplan-algo/src/Utils/parser.js"],"sourcesContent":["\n// [row, col] [x, y] [2,3]\n\nfunction beZeroArr2D(arr, x, y)   \n{\n    console.log(\" ROW, COL :\", x, y)\n    for (let i = 0; i < y; i++)   \n            arr[i] = Array(x).fill(0) //beZero\n    return arr;\n}\n\nfunction beZeroArr3D(Seats) {\n    let regex = /\\d+/g; // get only numbers\n    let seatsArr = Seats.match(regex);\n    let arr = [] // 3D arr\n    let arr2D = [[]] // 2D arr\n    console.log(\"Seate :\", seatsArr)\n    let x = 0;\n    let y = 1;\n    for (let i = 0; i < (seatsArr?.length / 2); i++){   // (Seats / 2) : (int) means how much seats we have \n        x = ((i) ? 0 : (x += 2))\n        let y = Number(x) + 1\n        console.log(\"X , Y, i\", x, y, i)\n        arr.push([beZeroArr2D(arr2D, Number(seatsArr[x]),  Number(seatsArr[y]))])\n        console.log(\"New Arry\" ,arr)\n    }\n    \nreturn arr;\n}\n\n\nfunction CreateMap(FormValues) {\n    console.log(\"DATA CREATE MAP:\", FormValues)\n    beZeroArr3D(FormValues.Seats)\n    return \"\"\n}\n\nexport default CreateMap"],"mappings":"AACA;;AAEA,SAASA,WAAW,CAACC,GAAG,EAAEC,CAAC,EAAEC,CAAC,EAC9B;EACIC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEH,CAAC,EAAEC,CAAC,CAAC;EAChC,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,CAAC,EAAEG,CAAC,EAAE,EAClBL,GAAG,CAACK,CAAC,CAAC,GAAGC,KAAK,CAACL,CAAC,CAAC,CAACM,IAAI,CAAC,CAAC,CAAC,EAAC;EAClC,OAAOP,GAAG;AACd;AAEA,SAASQ,WAAW,CAACC,KAAK,EAAE;EACxB,IAAIC,KAAK,GAAG,MAAM,CAAC,CAAC;EACpB,IAAIC,QAAQ,GAAGF,KAAK,CAACG,KAAK,CAACF,KAAK,CAAC;EACjC,IAAIV,GAAG,GAAG,EAAE,EAAC;EACb,IAAIa,KAAK,GAAG,CAAC,EAAE,CAAC,EAAC;EACjBV,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEO,QAAQ,CAAC;EAChC,IAAIV,CAAC,GAAG,CAAC;EACT,IAAIC,CAAC,GAAG,CAAC;EACT,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAI,CAAAM,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEG,MAAM,IAAG,CAAE,EAAET,CAAC,EAAE,EAAC;IAAI;IAChDJ,CAAC,GAAKI,CAAC,GAAI,CAAC,GAAIJ,CAAC,IAAI,CAAG;IACxB,IAAIC,CAAC,GAAGa,MAAM,CAACd,CAAC,CAAC,GAAG,CAAC;IACrBE,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEH,CAAC,EAAEC,CAAC,EAAEG,CAAC,CAAC;IAChCL,GAAG,CAACgB,IAAI,CAAC,CAACjB,WAAW,CAACc,KAAK,EAAEE,MAAM,CAACJ,QAAQ,CAACV,CAAC,CAAC,CAAC,EAAGc,MAAM,CAACJ,QAAQ,CAACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzEC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEJ,GAAG,CAAC;EAChC;EAEJ,OAAOA,GAAG;AACV;AAGA,SAASiB,SAAS,CAACC,UAAU,EAAE;EAC3Bf,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEc,UAAU,CAAC;EAC3CV,WAAW,CAACU,UAAU,CAACT,KAAK,CAAC;EAC7B,OAAO,EAAE;AACb;AAAC,KAJQQ,SAAS;AAMlB,eAAeA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}