{"ast":null,"code":"// Create Maps\n// [row, col] [x, y] [2,3]\n\nfunction beZeroArr3D(Seats) {\n  let regex = /\\d+/g; // get only numbers\n  let seatsArr = Seats.match(regex);\n  let arr = []; // 3D arr\n\n  // x,y to follow (seatsArr) row, col\n  let x = 0;\n  let y = 1;\n  for (let i = 0; i < (seatsArr === null || seatsArr === void 0 ? void 0 : seatsArr.length) / 2; i++) {\n    // (Seats / 2) : (int) means how much seats we have \n    arr.push(Array.from(Array(Number(seatsArr[x])), () => Array(Number(seatsArr[x])).fill(0)));\n    x += 2;\n    y += 2;\n  }\n  return arr;\n}\n\n// Push seat inside Map\n// [row, col] [x, y] [2,3]\n\nfunction pushSeat(arr, Passengers) {\n  return arr;\n}\nfunction CreateMap(FormValues) {\n  let arr = beZeroArr3D(FormValues.Seats);\n  console.log(\"Create MAP : \", arr);\n  arr = pushSeat(arr, FormValues.Passengers);\n  console.log(\"Push Passangers in MAP : \", arr);\n  return \"\";\n}\n_c = CreateMap;\nexport default CreateMap;\nvar _c;\n$RefreshReg$(_c, \"CreateMap\");","map":{"version":3,"names":["beZeroArr3D","Seats","regex","seatsArr","match","arr","x","y","i","length","push","Array","from","Number","fill","pushSeat","Passengers","CreateMap","FormValues","console","log"],"sources":["/Users/selbizakaria/Desktop/airplan-algo/src/Utils/parser.js"],"sourcesContent":["\n// Create Maps\n// [row, col] [x, y] [2,3]\n\nfunction beZeroArr3D(Seats) {\n    let regex = /\\d+/g; // get only numbers\n    let seatsArr = Seats.match(regex);\n    let arr = [] // 3D arr\n\n    // x,y to follow (seatsArr) row, col\n    let x = 0;\n    let y = 1;\n\n    for (let i = 0; i < (seatsArr?.length / 2); i++){   // (Seats / 2) : (int) means how much seats we have \n        arr.push(Array.from(Array(Number(seatsArr[x])), () => Array(Number(seatsArr[x])).fill(0)))\n        x+= 2;\n        y+= 2;\n    }\n    \nreturn arr;\n}\n\n// Push seat inside Map\n// [row, col] [x, y] [2,3]\n\nfunction pushSeat(arr, Passengers) {\n    \nreturn arr;\n}\n\nfunction CreateMap(FormValues) {\n    let arr = beZeroArr3D(FormValues.Seats)\n    console.log(\"Create MAP : \",arr);\n    arr = pushSeat(arr, FormValues.Passengers)\n    console.log(\"Push Passangers in MAP : \",arr);\t\n    return \"\"\n}\n\nexport default CreateMap"],"mappings":"AACA;AACA;;AAEA,SAASA,WAAW,CAACC,KAAK,EAAE;EACxB,IAAIC,KAAK,GAAG,MAAM,CAAC,CAAC;EACpB,IAAIC,QAAQ,GAAGF,KAAK,CAACG,KAAK,CAACF,KAAK,CAAC;EACjC,IAAIG,GAAG,GAAG,EAAE,EAAC;;EAEb;EACA,IAAIC,CAAC,GAAG,CAAC;EACT,IAAIC,CAAC,GAAG,CAAC;EAET,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAI,CAAAL,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEM,MAAM,IAAG,CAAE,EAAED,CAAC,EAAE,EAAC;IAAI;IAChDH,GAAG,CAACK,IAAI,CAACC,KAAK,CAACC,IAAI,CAACD,KAAK,CAACE,MAAM,CAACV,QAAQ,CAACG,CAAC,CAAC,CAAC,CAAC,EAAE,MAAMK,KAAK,CAACE,MAAM,CAACV,QAAQ,CAACG,CAAC,CAAC,CAAC,CAAC,CAACQ,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1FR,CAAC,IAAG,CAAC;IACLC,CAAC,IAAG,CAAC;EACT;EAEJ,OAAOF,GAAG;AACV;;AAEA;AACA;;AAEA,SAASU,QAAQ,CAACV,GAAG,EAAEW,UAAU,EAAE;EAEnC,OAAOX,GAAG;AACV;AAEA,SAASY,SAAS,CAACC,UAAU,EAAE;EAC3B,IAAIb,GAAG,GAAGL,WAAW,CAACkB,UAAU,CAACjB,KAAK,CAAC;EACvCkB,OAAO,CAACC,GAAG,CAAC,eAAe,EAACf,GAAG,CAAC;EAChCA,GAAG,GAAGU,QAAQ,CAACV,GAAG,EAAEa,UAAU,CAACF,UAAU,CAAC;EAC1CG,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAACf,GAAG,CAAC;EAC5C,OAAO,EAAE;AACb;AAAC,KANQY,SAAS;AAQlB,eAAeA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}