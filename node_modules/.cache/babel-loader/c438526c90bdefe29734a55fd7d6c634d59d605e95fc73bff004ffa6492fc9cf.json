{"ast":null,"code":"function checkArrayNumbers(input) {\n  let arr = input.replace(/\\[|\\]/g, \"\").split(\",\").map(subArr => subArr.split(\",\").map(Number));\n  console.log(\"MyArr :\", arr);\n  for (let i = 0; i < arr.length; i++) {\n    for (let j = 0; j < arr[i].length; j++) {\n      console.log(\"Row: \" + i + \" Column: \" + j + \" Value: \" + arr[i][j]);\n    }\n  }\n  return \"\";\n}\nconst RegexExp = value => {\n  var RegexExp = /^(\\[\\[\\d+,\\s?\\d+\\](,\\s?\\[\\d+,\\s?\\d+\\])*\\]|\\[\\d+,\\s?\\d+\\](,\\s?\\[\\d+,\\s?\\d+\\])*)$/;\n  const Seats = value.split(\"],[\");\n  if (!RegexExp.test(value)) return \"2D array Syntax error\";else if (Seats.length > 4) return \"Max Seats 4\";\n  console.log(\" ======> Error checker \", checkArrayNumbers(value));\n  return checkArrayNumbers(value);\n};\n_c = RegexExp;\nconst isNumber = value => {\n  if (isNaN(value)) return \"Require number\";else if (Number(value) > 50 || Number(value) < 0) return \"Value must be between 0 - 50\";\n  return \"\";\n};\nfunction Inputvalidator(value, name) {\n  if (name === \"Seats\") return RegexExp(value);\n  if (name === \"Passengers\") return isNumber(value);\n}\n_c2 = Inputvalidator;\nexport default Inputvalidator;\nvar _c, _c2;\n$RefreshReg$(_c, \"RegexExp\");\n$RefreshReg$(_c2, \"Inputvalidator\");","map":{"version":3,"names":["checkArrayNumbers","input","arr","replace","split","map","subArr","Number","console","log","i","length","j","RegexExp","value","Seats","test","isNumber","isNaN","Inputvalidator","name"],"sources":["/Users/selbizakaria/Desktop/airplan-algo/src/Utils/inputValidator.js"],"sourcesContent":["function checkArrayNumbers(input) {\n    let arr = input.replace(/\\[|\\]/g, \"\").split(\",\").map(subArr => subArr.split(\",\").map(Number));\n    console.log(\"MyArr :\", arr)\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = 0; j < arr[i].length; j++) {\n            console.log(\"Row: \" + i + \" Column: \" + j + \" Value: \" + arr[i][j]);\n        }\n    }\n    return\"\"\n}\n\n\nconst RegexExp = (value) => {\n    \n    var RegexExp = /^(\\[\\[\\d+,\\s?\\d+\\](,\\s?\\[\\d+,\\s?\\d+\\])*\\]|\\[\\d+,\\s?\\d+\\](,\\s?\\[\\d+,\\s?\\d+\\])*)$/;\n    const Seats = value.split(\"],[\")\n\n    if (!RegexExp.test(value)) return (\"2D array Syntax error\")\n    else if (Seats.length > 4) return (\"Max Seats 4\")\n\n    console.log(\" ======> Error checker \", checkArrayNumbers(value))\n    return (checkArrayNumbers(value))\n}\n\nconst isNumber = (value) => {\n    if (isNaN(value)) return (\"Require number\")\n    else if (Number(value) > 50 || Number(value) < 0) return (\"Value must be between 0 - 50\")\n    return (\"\")\n}\n\nfunction Inputvalidator(value, name) {\n    if (name === \"Seats\") return (RegexExp(value))\n    if (name === \"Passengers\") return (isNumber(value))\n}\n\nexport default Inputvalidator;"],"mappings":"AAAA,SAASA,iBAAiB,CAACC,KAAK,EAAE;EAC9B,IAAIC,GAAG,GAAGD,KAAK,CAACE,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,IAAIA,MAAM,CAACF,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACE,MAAM,CAAC,CAAC;EAC7FC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEP,GAAG,CAAC;EAC3B,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,GAAG,CAACS,MAAM,EAAED,CAAC,EAAE,EAAE;IACjC,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,GAAG,CAACQ,CAAC,CAAC,CAACC,MAAM,EAAEC,CAAC,EAAE,EAAE;MACpCJ,OAAO,CAACC,GAAG,CAAC,OAAO,GAAGC,CAAC,GAAG,WAAW,GAAGE,CAAC,GAAG,UAAU,GAAGV,GAAG,CAACQ,CAAC,CAAC,CAACE,CAAC,CAAC,CAAC;IACvE;EACJ;EACA,OAAM,EAAE;AACZ;AAGA,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAExB,IAAID,QAAQ,GAAG,iFAAiF;EAChG,MAAME,KAAK,GAAGD,KAAK,CAACV,KAAK,CAAC,KAAK,CAAC;EAEhC,IAAI,CAACS,QAAQ,CAACG,IAAI,CAACF,KAAK,CAAC,EAAE,OAAQ,uBAAuB,CAAC,KACtD,IAAIC,KAAK,CAACJ,MAAM,GAAG,CAAC,EAAE,OAAQ,aAAa;EAEhDH,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAET,iBAAiB,CAACc,KAAK,CAAC,CAAC;EAChE,OAAQd,iBAAiB,CAACc,KAAK,CAAC;AACpC,CAAC;AAAA,KAVKD,QAAQ;AAYd,MAAMI,QAAQ,GAAIH,KAAK,IAAK;EACxB,IAAII,KAAK,CAACJ,KAAK,CAAC,EAAE,OAAQ,gBAAgB,CAAC,KACtC,IAAIP,MAAM,CAACO,KAAK,CAAC,GAAG,EAAE,IAAIP,MAAM,CAACO,KAAK,CAAC,GAAG,CAAC,EAAE,OAAQ,8BAA8B;EACxF,OAAQ,EAAE;AACd,CAAC;AAED,SAASK,cAAc,CAACL,KAAK,EAAEM,IAAI,EAAE;EACjC,IAAIA,IAAI,KAAK,OAAO,EAAE,OAAQP,QAAQ,CAACC,KAAK,CAAC;EAC7C,IAAIM,IAAI,KAAK,YAAY,EAAE,OAAQH,QAAQ,CAACH,KAAK,CAAC;AACtD;AAAC,MAHQK,cAAc;AAKvB,eAAeA,cAAc;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}