{"ast":null,"code":"const RegexExp = value => {\n  var RegexExp = /^(\\[\\[\\d+,\\s?\\d+\\](,\\s?\\[\\d+,\\s?\\d+\\])*\\]|\\[\\d+,\\s?\\d+\\](,\\s?\\[\\d+,\\s?\\d+\\])*)$/;\n  return !RegexExp.test(value) ? \"2D array Syntax error\" : \"\";\n};\n_c = RegexExp;\nfunction Inputvalidator(formValues) {\n  if (formValues.Seats.value) formValues.Seats.error = RegexExp(formValues.Seats.value);\n  return formValues;\n}\n_c2 = Inputvalidator;\nexport default Inputvalidator;\nvar _c, _c2;\n$RefreshReg$(_c, \"RegexExp\");\n$RefreshReg$(_c2, \"Inputvalidator\");","map":{"version":3,"names":["RegexExp","value","test","Inputvalidator","formValues","Seats","error"],"sources":["/Users/selbizakaria/Desktop/airplan-algo/src/Utils/inputValidator.js"],"sourcesContent":["const RegexExp = (value) => {\n    \n    var RegexExp = /^(\\[\\[\\d+,\\s?\\d+\\](,\\s?\\[\\d+,\\s?\\d+\\])*\\]|\\[\\d+,\\s?\\d+\\](,\\s?\\[\\d+,\\s?\\d+\\])*)$/;\n    return (!RegexExp.test(value) ? \"2D array Syntax error\" : \"\")\n}\n\nfunction Inputvalidator(formValues) {\n\n    if (formValues.Seats.value) formValues.Seats.error = RegexExp(formValues.Seats.value)\n    return (formValues)\n}\n\nexport default Inputvalidator;"],"mappings":"AAAA,MAAMA,QAAQ,GAAIC,KAAK,IAAK;EAExB,IAAID,QAAQ,GAAG,iFAAiF;EAChG,OAAQ,CAACA,QAAQ,CAACE,IAAI,CAACD,KAAK,CAAC,GAAG,uBAAuB,GAAG,EAAE;AAChE,CAAC;AAAA,KAJKD,QAAQ;AAMd,SAASG,cAAc,CAACC,UAAU,EAAE;EAEhC,IAAIA,UAAU,CAACC,KAAK,CAACJ,KAAK,EAAEG,UAAU,CAACC,KAAK,CAACC,KAAK,GAAGN,QAAQ,CAACI,UAAU,CAACC,KAAK,CAACJ,KAAK,CAAC;EACrF,OAAQG,UAAU;AACtB;AAAC,MAJQD,cAAc;AAMvB,eAAeA,cAAc;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}